# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
orbs:
  aws-cli: circleci/aws-cli@1.3
  aws-ecs: circleci/aws-ecs@2.0

jobs:
  create-inventory-file:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/python:3.9.1
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Make directory"
          command: mkdir -p instances
      - run:
          name: "create inventory file"
          command: touch inventory > instances/inventory.txt
      - persist_to_workspace:
          root: instances
          paths:
            - inventory.txt
      - run:
          name: "create first line in file"
          command: echo [all] >> instances/inventory.txt
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: US_EAST_1_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: "query ec2 instances and append ip addresses to inventory file"
          command: aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --filters "Name = tag:Name,Values = play_server" --output text >> instances/inventory.txt

  create-infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file infra-template.yml \
              --stack-name udacity-devops-practice-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      # Fail the job intentionally to simulate an error.
      # Uncomment the line below if you want to fail the current step
      # - run: return 1
      - destroy_environment
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  create-playbook-files:
    jobs:
      #- create-inventory-file
      - create-infrastructure
